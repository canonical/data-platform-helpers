name: Publish

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - name: Check for tag and build package
        run: |
          VERSION=$(poetry version -s)
          if [ $(git tag -l "${VERSION}") ]; then
            echo "Tag ${VERSION} already exists. Please bump the project to a greater version."
            exit 1
          fi
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          poetry build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: distfiles
          path: dist/

  upload-github:
    name: Publish to GitHub
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: distfiles
          path: dist/
      - name: Create GitHub release
        run: |
          git tag '${{ steps.build.outputs.VERSION }}'
          git push origin '${{ steps.build.outputs.VERSION }}'
          gh release create '${{ steps.build.outputs.VERSION }}' --generate-notes --title '${{ steps.build.outputs.VERSION }}'
          gh release upload '${{ steps.build.outputs.VERSION }}' dist/*.{tar.gz,whl}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-pypi:
    name: Publish to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: distfiles
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
    permissions:
      id-token: write # Needed for trusted publishing (https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/)
