# Copyright 2024 Canonical Limited
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
application = data_platform_helpers
src_path = {tox_root}/data_platform_helpers
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals =
    /bin/bash
    poetry

set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    charm-actions: TESTFILE=test_charm_actions.py

pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --only format
    poetry run ruff check --fix {[vars]all_path}
    poetry run ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --only lint,format
    poetry run codespell {tox_root} \
        --skip {tox_root}/poetry.lock \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/env \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg 

    poetry run ruff check {[vars]all_path}
    poetry run ruff format --check --diff {[vars]all_path}


[testenv:integration-{charm-actions}]
description = Run integration tests
set_env =
    {[testenv]set_env}
    # Workaround for https://github.com/python-poetry/poetry/issues/6958
    POETRY_INSTALLER_PARALLEL = false
pass_env =
    {[testenv]pass_env}
    CI
commands =
    poetry install --with integration
    pip install git+https://github.com/canonical/data-platform-helpers.git@action-helpers
    poetry run pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/{env:TESTFILE}
