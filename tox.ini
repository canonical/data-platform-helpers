# Copyright 2024 Canonical Limited
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
application = data_platform_helpers
src_path = {tox_root}/data_platform_helpers
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals =
    /bin/bash
    poetry

set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --only format
    poetry run ruff check --config pyproject.toml --fix {[vars]all_path}
    poetry run ruff format --config pyproject.toml {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install -E all --with lint,format
    poetry run codespell {tox_root} \
        --skip {tox_root}/poetry.lock \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/env \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg 

    poetry run ruff check --config pyproject.toml {[vars]all_path}
    poetry run ruff format --config pyproject.toml --check --diff {[vars]all_path}
    poetry run pyright

[testenv:unit]
description = Run unit tests
set_env =
    {[testenv]set_env}
commands_pre =
    poetry install --only main,unit
commands = poetry run coverage run --source={[vars]src_path} \
    -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
